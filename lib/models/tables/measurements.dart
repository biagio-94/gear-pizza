//
//  Generated file. Do not edit.
//  Generated by supabase_codegen (1.4.0)
//
// ignore_for_file: require_trailing_commas, constant_identifier_names

import 'package:supabase_codegen/supabase_codegen.dart';
// Import enums if needed
// ignore: unused_import, always_use_package_imports
import '../database.dart';

/// Measurements Table
class MeasurementsTable extends SupabaseTable<MeasurementsRow> {
  /// Table Name
  @override
  String get tableName => 'measurements';

  /// Create a [MeasurementsRow] from the [data] provided
  @override
  MeasurementsRow createRow(Map<String, dynamic> data) =>
      MeasurementsRow.fromJson(data);
}

/// Measurements Row
class MeasurementsRow extends SupabaseDataRow {
  /// Measurements Row
  MeasurementsRow({
    required String userId,
    required DateTime dataMisurazione,
    String? misurazioneId,
    double? peso,
    double? bodyfat,
    double? circonferenzaVita,
    double? circonferenzaFianchi,
    String? note,
  }) : super({
          'user_id': supaSerialize(userId),
          'data_misurazione': supaSerialize(dataMisurazione),
          if (misurazioneId != null)
            'misurazione_id': supaSerialize(misurazioneId),
          if (peso != null) 'peso': supaSerialize(peso),
          if (bodyfat != null) 'bodyfat': supaSerialize(bodyfat),
          if (circonferenzaVita != null)
            'circonferenza_vita': supaSerialize(circonferenzaVita),
          if (circonferenzaFianchi != null)
            'circonferenza_fianchi': supaSerialize(circonferenzaFianchi),
          if (note != null) 'note': supaSerialize(note),
        });

  /// Measurements Row
  const MeasurementsRow._(super.data);

  /// Create Measurements Row from a [data] map
  factory MeasurementsRow.fromJson(Map<String, dynamic> data) =>
      MeasurementsRow._(data.cleaned);

  /// Get the Json representation of the row
  Map<String, dynamic> toJson() => data;

  /// Get the [SupabaseTable] for this row
  @override
  SupabaseTable get table => MeasurementsTable();

  /// Misurazione Id field name
  static const String misurazioneIdField = 'misurazione_id';

  /// Misurazione Id
  String get misurazioneId =>
      getField<String>(misurazioneIdField, defaultValue: '')!;
  set misurazioneId(String value) =>
      setField<String>(misurazioneIdField, value);

  /// User Id field name
  static const String userIdField = 'user_id';

  /// User Id
  String get userId => getField<String>(userIdField)!;
  set userId(String value) => setField<String>(userIdField, value);

  /// Data Misurazione field name
  static const String dataMisurazioneField = 'data_misurazione';

  /// Data Misurazione
  DateTime get dataMisurazione => getField<DateTime>(dataMisurazioneField)!;
  set dataMisurazione(DateTime value) =>
      setField<DateTime>(dataMisurazioneField, value);

  /// Peso field name
  static const String pesoField = 'peso';

  /// Peso
  double? get peso => getField<double>(pesoField);
  set peso(double? value) => setField<double>(pesoField, value);

  /// Bodyfat field name
  static const String bodyfatField = 'bodyfat';

  /// Bodyfat
  double? get bodyfat => getField<double>(bodyfatField);
  set bodyfat(double? value) => setField<double>(bodyfatField, value);

  /// Circonferenza Vita field name
  static const String circonferenzaVitaField = 'circonferenza_vita';

  /// Circonferenza Vita
  double? get circonferenzaVita => getField<double>(circonferenzaVitaField);
  set circonferenzaVita(double? value) =>
      setField<double>(circonferenzaVitaField, value);

  /// Circonferenza Fianchi field name
  static const String circonferenzaFianchiField = 'circonferenza_fianchi';

  /// Circonferenza Fianchi
  double? get circonferenzaFianchi =>
      getField<double>(circonferenzaFianchiField);
  set circonferenzaFianchi(double? value) =>
      setField<double>(circonferenzaFianchiField, value);

  /// Note field name
  static const String noteField = 'note';

  /// Note
  String? get note => getField<String>(noteField);
  set note(String? value) => setField<String>(noteField, value);

  /// Make a copy of the current [MeasurementsRow]
  /// overriding the provided fields
  MeasurementsRow copyWith({
    String? userId,
    DateTime? dataMisurazione,
    String? misurazioneId,
    double? peso,
    double? bodyfat,
    double? circonferenzaVita,
    double? circonferenzaFianchi,
    String? note,
  }) =>
      MeasurementsRow.fromJson({
        'user_id': supaSerialize(userId) ?? data['user_id'],
        'data_misurazione':
            supaSerialize(dataMisurazione) ?? data['data_misurazione'],
        'misurazione_id':
            supaSerialize(misurazioneId) ?? data['misurazione_id'],
        'peso': supaSerialize(peso) ?? data['peso'],
        'bodyfat': supaSerialize(bodyfat) ?? data['bodyfat'],
        'circonferenza_vita':
            supaSerialize(circonferenzaVita) ?? data['circonferenza_vita'],
        'circonferenza_fianchi': supaSerialize(circonferenzaFianchi) ??
            data['circonferenza_fianchi'],
        'note': supaSerialize(note) ?? data['note'],
      });
}

/// Date: 2025-06-24 13:16:53.340971
