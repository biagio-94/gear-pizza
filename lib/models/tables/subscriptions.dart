//
//  Generated file. Do not edit.
//  Generated by supabase_codegen (1.4.0)
//
// ignore_for_file: require_trailing_commas, constant_identifier_names

import 'package:supabase_codegen/supabase_codegen.dart';
// Import enums if needed
// ignore: unused_import, always_use_package_imports
import '../database.dart';

/// Subscriptions Table
class SubscriptionsTable extends SupabaseTable<SubscriptionsRow> {
  /// Table Name
  @override
  String get tableName => 'subscriptions';

  /// Create a [SubscriptionsRow] from the [data] provided
  @override
  SubscriptionsRow createRow(Map<String, dynamic> data) =>
      SubscriptionsRow.fromJson(data);
}

/// Subscriptions Row
class SubscriptionsRow extends SupabaseDataRow {
  /// Subscriptions Row
  SubscriptionsRow({
    required String userId,
    required String tipo,
    required DateTime dataInizio,
    required DateTime dataFine,
    required String stato,
    String? abbonamentoId,
    String? note,
  }) : super({
          'user_id': supaSerialize(userId),
          'tipo': supaSerialize(tipo),
          'data_inizio': supaSerialize(dataInizio),
          'data_fine': supaSerialize(dataFine),
          'stato': supaSerialize(stato),
          if (abbonamentoId != null)
            'abbonamento_id': supaSerialize(abbonamentoId),
          if (note != null) 'note': supaSerialize(note),
        });

  /// Subscriptions Row
  const SubscriptionsRow._(super.data);

  /// Create Subscriptions Row from a [data] map
  factory SubscriptionsRow.fromJson(Map<String, dynamic> data) =>
      SubscriptionsRow._(data.cleaned);

  /// Get the Json representation of the row
  Map<String, dynamic> toJson() => data;

  /// Get the [SupabaseTable] for this row
  @override
  SupabaseTable get table => SubscriptionsTable();

  /// Abbonamento Id field name
  static const String abbonamentoIdField = 'abbonamento_id';

  /// Abbonamento Id
  String get abbonamentoId =>
      getField<String>(abbonamentoIdField, defaultValue: '')!;
  set abbonamentoId(String value) =>
      setField<String>(abbonamentoIdField, value);

  /// User Id field name
  static const String userIdField = 'user_id';

  /// User Id
  String get userId => getField<String>(userIdField)!;
  set userId(String value) => setField<String>(userIdField, value);

  /// Tipo field name
  static const String tipoField = 'tipo';

  /// Tipo
  String get tipo => getField<String>(tipoField)!;
  set tipo(String value) => setField<String>(tipoField, value);

  /// Data Inizio field name
  static const String dataInizioField = 'data_inizio';

  /// Data Inizio
  DateTime get dataInizio => getField<DateTime>(dataInizioField)!;
  set dataInizio(DateTime value) => setField<DateTime>(dataInizioField, value);

  /// Data Fine field name
  static const String dataFineField = 'data_fine';

  /// Data Fine
  DateTime get dataFine => getField<DateTime>(dataFineField)!;
  set dataFine(DateTime value) => setField<DateTime>(dataFineField, value);

  /// Stato field name
  static const String statoField = 'stato';

  /// Stato
  String get stato => getField<String>(statoField)!;
  set stato(String value) => setField<String>(statoField, value);

  /// Note field name
  static const String noteField = 'note';

  /// Note
  String? get note => getField<String>(noteField);
  set note(String? value) => setField<String>(noteField, value);

  /// Make a copy of the current [SubscriptionsRow]
  /// overriding the provided fields
  SubscriptionsRow copyWith({
    String? userId,
    String? tipo,
    DateTime? dataInizio,
    DateTime? dataFine,
    String? stato,
    String? abbonamentoId,
    String? note,
  }) =>
      SubscriptionsRow.fromJson({
        'user_id': supaSerialize(userId) ?? data['user_id'],
        'tipo': supaSerialize(tipo) ?? data['tipo'],
        'data_inizio': supaSerialize(dataInizio) ?? data['data_inizio'],
        'data_fine': supaSerialize(dataFine) ?? data['data_fine'],
        'stato': supaSerialize(stato) ?? data['stato'],
        'abbonamento_id':
            supaSerialize(abbonamentoId) ?? data['abbonamento_id'],
        'note': supaSerialize(note) ?? data['note'],
      });
}

/// Date: 2025-06-24 13:16:53.356914
