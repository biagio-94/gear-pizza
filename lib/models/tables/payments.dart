//
//  Generated file. Do not edit.
//  Generated by supabase_codegen (1.4.0)
//
// ignore_for_file: require_trailing_commas, constant_identifier_names

import 'package:supabase_codegen/supabase_codegen.dart';
// Import enums if needed
// ignore: unused_import, always_use_package_imports
import '../database.dart';

/// Payments Table
class PaymentsTable extends SupabaseTable<PaymentsRow> {
  /// Table Name
  @override
  String get tableName => 'payments';

  /// Create a [PaymentsRow] from the [data] provided
  @override
  PaymentsRow createRow(Map<String, dynamic> data) =>
      PaymentsRow.fromJson(data);
}

/// Payments Row
class PaymentsRow extends SupabaseDataRow {
  /// Payments Row
  PaymentsRow({
    required String userId,
    required double importo,
    required String metodo,
    String? pagamentoId,
    String? abbonamentoId,
    DateTime? dataPagamento,
    String? note,
  }) : super({
          'user_id': supaSerialize(userId),
          'importo': supaSerialize(importo),
          'metodo': supaSerialize(metodo),
          if (pagamentoId != null) 'pagamento_id': supaSerialize(pagamentoId),
          if (abbonamentoId != null)
            'abbonamento_id': supaSerialize(abbonamentoId),
          if (dataPagamento != null)
            'data_pagamento': supaSerialize(dataPagamento),
          if (note != null) 'note': supaSerialize(note),
        });

  /// Payments Row
  const PaymentsRow._(super.data);

  /// Create Payments Row from a [data] map
  factory PaymentsRow.fromJson(Map<String, dynamic> data) =>
      PaymentsRow._(data.cleaned);

  /// Get the Json representation of the row
  Map<String, dynamic> toJson() => data;

  /// Get the [SupabaseTable] for this row
  @override
  SupabaseTable get table => PaymentsTable();

  /// Pagamento Id field name
  static const String pagamentoIdField = 'pagamento_id';

  /// Pagamento Id
  String get pagamentoId =>
      getField<String>(pagamentoIdField, defaultValue: '')!;
  set pagamentoId(String value) => setField<String>(pagamentoIdField, value);

  /// User Id field name
  static const String userIdField = 'user_id';

  /// User Id
  String get userId => getField<String>(userIdField)!;
  set userId(String value) => setField<String>(userIdField, value);

  /// Abbonamento Id field name
  static const String abbonamentoIdField = 'abbonamento_id';

  /// Abbonamento Id
  String? get abbonamentoId => getField<String>(abbonamentoIdField);
  set abbonamentoId(String? value) =>
      setField<String>(abbonamentoIdField, value);

  /// Data Pagamento field name
  static const String dataPagamentoField = 'data_pagamento';

  /// Data Pagamento
  DateTime get dataPagamento =>
      getField<DateTime>(dataPagamentoField, defaultValue: DateTime.now())!;
  set dataPagamento(DateTime value) =>
      setField<DateTime>(dataPagamentoField, value);

  /// Importo field name
  static const String importoField = 'importo';

  /// Importo
  double get importo => getField<double>(importoField)!;
  set importo(double value) => setField<double>(importoField, value);

  /// Metodo field name
  static const String metodoField = 'metodo';

  /// Metodo
  String get metodo => getField<String>(metodoField)!;
  set metodo(String value) => setField<String>(metodoField, value);

  /// Note field name
  static const String noteField = 'note';

  /// Note
  String? get note => getField<String>(noteField);
  set note(String? value) => setField<String>(noteField, value);

  /// Make a copy of the current [PaymentsRow]
  /// overriding the provided fields
  PaymentsRow copyWith({
    String? userId,
    double? importo,
    String? metodo,
    String? pagamentoId,
    String? abbonamentoId,
    DateTime? dataPagamento,
    String? note,
  }) =>
      PaymentsRow.fromJson({
        'user_id': supaSerialize(userId) ?? data['user_id'],
        'importo': supaSerialize(importo) ?? data['importo'],
        'metodo': supaSerialize(metodo) ?? data['metodo'],
        'pagamento_id': supaSerialize(pagamentoId) ?? data['pagamento_id'],
        'abbonamento_id':
            supaSerialize(abbonamentoId) ?? data['abbonamento_id'],
        'data_pagamento':
            supaSerialize(dataPagamento) ?? data['data_pagamento'],
        'note': supaSerialize(note) ?? data['note'],
      });
}

/// Date: 2025-06-24 13:16:53.352041
