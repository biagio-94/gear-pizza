//
//  Generated file. Do not edit.
//  Generated by supabase_codegen (1.4.0)
//
// ignore_for_file: require_trailing_commas, constant_identifier_names

import 'package:supabase_codegen/supabase_codegen.dart';
// Import enums if needed
// ignore: unused_import, always_use_package_imports
import '../database.dart';

/// Reviews Table
class ReviewsTable extends SupabaseTable<ReviewsRow> {
  /// Table Name
  @override
  String get tableName => 'reviews';

  /// Create a [ReviewsRow] from the [data] provided
  @override
  ReviewsRow createRow(Map<String, dynamic> data) => ReviewsRow.fromJson(data);
}

/// Reviews Row
class ReviewsRow extends SupabaseDataRow {
  /// Reviews Row
  ReviewsRow({
    required String clientId,
    required String ptId,
    String? reviewId,
    int? valutazione,
    String? commento,
    DateTime? dataReview,
  }) : super({
          'client_id': supaSerialize(clientId),
          'pt_id': supaSerialize(ptId),
          if (reviewId != null) 'review_id': supaSerialize(reviewId),
          if (valutazione != null) 'valutazione': supaSerialize(valutazione),
          if (commento != null) 'commento': supaSerialize(commento),
          if (dataReview != null) 'data_review': supaSerialize(dataReview),
        });

  /// Reviews Row
  const ReviewsRow._(super.data);

  /// Create Reviews Row from a [data] map
  factory ReviewsRow.fromJson(Map<String, dynamic> data) =>
      ReviewsRow._(data.cleaned);

  /// Get the Json representation of the row
  Map<String, dynamic> toJson() => data;

  /// Get the [SupabaseTable] for this row
  @override
  SupabaseTable get table => ReviewsTable();

  /// Review Id field name
  static const String reviewIdField = 'review_id';

  /// Review Id
  String get reviewId => getField<String>(reviewIdField, defaultValue: '')!;
  set reviewId(String value) => setField<String>(reviewIdField, value);

  /// Client Id field name
  static const String clientIdField = 'client_id';

  /// Client Id
  String get clientId => getField<String>(clientIdField)!;
  set clientId(String value) => setField<String>(clientIdField, value);

  /// Pt Id field name
  static const String ptIdField = 'pt_id';

  /// Pt Id
  String get ptId => getField<String>(ptIdField)!;
  set ptId(String value) => setField<String>(ptIdField, value);

  /// Valutazione field name
  static const String valutazioneField = 'valutazione';

  /// Valutazione
  int? get valutazione => getField<int>(valutazioneField);
  set valutazione(int? value) => setField<int>(valutazioneField, value);

  /// Commento field name
  static const String commentoField = 'commento';

  /// Commento
  String? get commento => getField<String>(commentoField);
  set commento(String? value) => setField<String>(commentoField, value);

  /// Data Review field name
  static const String dataReviewField = 'data_review';

  /// Data Review
  DateTime get dataReview =>
      getField<DateTime>(dataReviewField, defaultValue: DateTime.now())!;
  set dataReview(DateTime value) => setField<DateTime>(dataReviewField, value);

  /// Make a copy of the current [ReviewsRow]
  /// overriding the provided fields
  ReviewsRow copyWith({
    String? clientId,
    String? ptId,
    String? reviewId,
    int? valutazione,
    String? commento,
    DateTime? dataReview,
  }) =>
      ReviewsRow.fromJson({
        'client_id': supaSerialize(clientId) ?? data['client_id'],
        'pt_id': supaSerialize(ptId) ?? data['pt_id'],
        'review_id': supaSerialize(reviewId) ?? data['review_id'],
        'valutazione': supaSerialize(valutazione) ?? data['valutazione'],
        'commento': supaSerialize(commento) ?? data['commento'],
        'data_review': supaSerialize(dataReview) ?? data['data_review'],
      });
}

/// Date: 2025-06-24 13:16:53.355533
