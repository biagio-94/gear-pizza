//
//  Generated file. Do not edit.
//  Generated by supabase_codegen (1.4.0)
//
// ignore_for_file: require_trailing_commas, constant_identifier_names

import 'package:supabase_codegen/supabase_codegen.dart';
// Import enums if needed
// ignore: unused_import, always_use_package_imports
import '../database.dart';

/// Program Assignments Table
class ProgramAssignmentsTable extends SupabaseTable<ProgramAssignmentsRow> {
  /// Table Name
  @override
  String get tableName => 'program_assignments';

  /// Create a [ProgramAssignmentsRow] from the [data] provided
  @override
  ProgramAssignmentsRow createRow(Map<String, dynamic> data) =>
      ProgramAssignmentsRow.fromJson(data);
}

/// Program Assignments Row
class ProgramAssignmentsRow extends SupabaseDataRow {
  /// Program Assignments Row
  ProgramAssignmentsRow({
    required String programmaId,
    required String userId,
    DateTime? dataAssegnazione,
  }) : super({
          'programma_id': supaSerialize(programmaId),
          'user_id': supaSerialize(userId),
          if (dataAssegnazione != null)
            'data_assegnazione': supaSerialize(dataAssegnazione),
        });

  /// Program Assignments Row
  const ProgramAssignmentsRow._(super.data);

  /// Create Program Assignments Row from a [data] map
  factory ProgramAssignmentsRow.fromJson(Map<String, dynamic> data) =>
      ProgramAssignmentsRow._(data.cleaned);

  /// Get the Json representation of the row
  Map<String, dynamic> toJson() => data;

  /// Get the [SupabaseTable] for this row
  @override
  SupabaseTable get table => ProgramAssignmentsTable();

  /// Programma Id field name
  static const String programmaIdField = 'programma_id';

  /// Programma Id
  String get programmaId => getField<String>(programmaIdField)!;
  set programmaId(String value) => setField<String>(programmaIdField, value);

  /// User Id field name
  static const String userIdField = 'user_id';

  /// User Id
  String get userId => getField<String>(userIdField)!;
  set userId(String value) => setField<String>(userIdField, value);

  /// Data Assegnazione field name
  static const String dataAssegnazioneField = 'data_assegnazione';

  /// Data Assegnazione
  DateTime get dataAssegnazione =>
      getField<DateTime>(dataAssegnazioneField, defaultValue: DateTime.now())!;
  set dataAssegnazione(DateTime value) =>
      setField<DateTime>(dataAssegnazioneField, value);

  /// Make a copy of the current [ProgramAssignmentsRow]
  /// overriding the provided fields
  ProgramAssignmentsRow copyWith({
    String? programmaId,
    String? userId,
    DateTime? dataAssegnazione,
  }) =>
      ProgramAssignmentsRow.fromJson({
        'programma_id': supaSerialize(programmaId) ?? data['programma_id'],
        'user_id': supaSerialize(userId) ?? data['user_id'],
        'data_assegnazione':
            supaSerialize(dataAssegnazione) ?? data['data_assegnazione'],
      });
}

/// Date: 2025-06-24 13:16:53.353227
