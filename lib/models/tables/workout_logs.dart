//
//  Generated file. Do not edit.
//  Generated by supabase_codegen (1.4.0)
//
// ignore_for_file: require_trailing_commas, constant_identifier_names

import 'package:supabase_codegen/supabase_codegen.dart';
// Import enums if needed
// ignore: unused_import, always_use_package_imports
import '../database.dart';

/// Workout Logs Table
class WorkoutLogsTable extends SupabaseTable<WorkoutLogsRow> {
  /// Table Name
  @override
  String get tableName => 'workout_logs';

  /// Create a [WorkoutLogsRow] from the [data] provided
  @override
  WorkoutLogsRow createRow(Map<String, dynamic> data) =>
      WorkoutLogsRow.fromJson(data);
}

/// Workout Logs Row
class WorkoutLogsRow extends SupabaseDataRow {
  /// Workout Logs Row
  WorkoutLogsRow({
    required String allenamentoId,
    required DateTime dataCompletamento,
    String? logId,
    double? durata,
    double? perceivedEffort,
    String? note,
  }) : super({
          'allenamento_id': supaSerialize(allenamentoId),
          'data_completamento': supaSerialize(dataCompletamento),
          if (logId != null) 'log_id': supaSerialize(logId),
          if (durata != null) 'durata': supaSerialize(durata),
          if (perceivedEffort != null)
            'perceived_effort': supaSerialize(perceivedEffort),
          if (note != null) 'note': supaSerialize(note),
        });

  /// Workout Logs Row
  const WorkoutLogsRow._(super.data);

  /// Create Workout Logs Row from a [data] map
  factory WorkoutLogsRow.fromJson(Map<String, dynamic> data) =>
      WorkoutLogsRow._(data.cleaned);

  /// Get the Json representation of the row
  Map<String, dynamic> toJson() => data;

  /// Get the [SupabaseTable] for this row
  @override
  SupabaseTable get table => WorkoutLogsTable();

  /// Log Id field name
  static const String logIdField = 'log_id';

  /// Log Id
  String get logId => getField<String>(logIdField, defaultValue: '')!;
  set logId(String value) => setField<String>(logIdField, value);

  /// Allenamento Id field name
  static const String allenamentoIdField = 'allenamento_id';

  /// Allenamento Id
  String get allenamentoId => getField<String>(allenamentoIdField)!;
  set allenamentoId(String value) =>
      setField<String>(allenamentoIdField, value);

  /// Data Completamento field name
  static const String dataCompletamentoField = 'data_completamento';

  /// Data Completamento
  DateTime get dataCompletamento => getField<DateTime>(dataCompletamentoField)!;
  set dataCompletamento(DateTime value) =>
      setField<DateTime>(dataCompletamentoField, value);

  /// Durata field name
  static const String durataField = 'durata';

  /// Durata
  double? get durata => getField<double>(durataField);
  set durata(double? value) => setField<double>(durataField, value);

  /// Perceived Effort field name
  static const String perceivedEffortField = 'perceived_effort';

  /// Perceived Effort
  double? get perceivedEffort => getField<double>(perceivedEffortField);
  set perceivedEffort(double? value) =>
      setField<double>(perceivedEffortField, value);

  /// Note field name
  static const String noteField = 'note';

  /// Note
  String? get note => getField<String>(noteField);
  set note(String? value) => setField<String>(noteField, value);

  /// Make a copy of the current [WorkoutLogsRow]
  /// overriding the provided fields
  WorkoutLogsRow copyWith({
    String? allenamentoId,
    DateTime? dataCompletamento,
    String? logId,
    double? durata,
    double? perceivedEffort,
    String? note,
  }) =>
      WorkoutLogsRow.fromJson({
        'allenamento_id':
            supaSerialize(allenamentoId) ?? data['allenamento_id'],
        'data_completamento':
            supaSerialize(dataCompletamento) ?? data['data_completamento'],
        'log_id': supaSerialize(logId) ?? data['log_id'],
        'durata': supaSerialize(durata) ?? data['durata'],
        'perceived_effort':
            supaSerialize(perceivedEffort) ?? data['perceived_effort'],
        'note': supaSerialize(note) ?? data['note'],
      });
}

/// Date: 2025-06-24 13:16:53.358555
