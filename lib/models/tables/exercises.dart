//
//  Generated file. Do not edit.
//  Generated by supabase_codegen (1.4.0)
//
// ignore_for_file: require_trailing_commas, constant_identifier_names

import 'package:supabase_codegen/supabase_codegen.dart';
// Import enums if needed
// ignore: unused_import, always_use_package_imports
import '../database.dart';

/// Exercises Table
class ExercisesTable extends SupabaseTable<ExercisesRow> {
  /// Table Name
  @override
  String get tableName => 'exercises';

  /// Create a [ExercisesRow] from the [data] provided
  @override
  ExercisesRow createRow(Map<String, dynamic> data) =>
      ExercisesRow.fromJson(data);
}

/// Exercises Row
class ExercisesRow extends SupabaseDataRow {
  /// Exercises Row
  ExercisesRow({
    required String workoutId,
    required int serie,
    required String ripetizioni,
    String? esercizioAllId,
    String? esercizioId,
    double? carico,
    double? recupero,
    String? note,
  }) : super({
          'workout_id': supaSerialize(workoutId),
          'serie': supaSerialize(serie),
          'ripetizioni': supaSerialize(ripetizioni),
          if (esercizioAllId != null)
            'esercizio_all_id': supaSerialize(esercizioAllId),
          if (esercizioId != null) 'esercizio_id': supaSerialize(esercizioId),
          if (carico != null) 'carico': supaSerialize(carico),
          if (recupero != null) 'recupero': supaSerialize(recupero),
          if (note != null) 'note': supaSerialize(note),
        });

  /// Exercises Row
  const ExercisesRow._(super.data);

  /// Create Exercises Row from a [data] map
  factory ExercisesRow.fromJson(Map<String, dynamic> data) =>
      ExercisesRow._(data.cleaned);

  /// Get the Json representation of the row
  Map<String, dynamic> toJson() => data;

  /// Get the [SupabaseTable] for this row
  @override
  SupabaseTable get table => ExercisesTable();

  /// Esercizio All Id field name
  static const String esercizioAllIdField = 'esercizio_all_id';

  /// Esercizio All Id
  String get esercizioAllId =>
      getField<String>(esercizioAllIdField, defaultValue: '')!;
  set esercizioAllId(String value) =>
      setField<String>(esercizioAllIdField, value);

  /// Workout Id field name
  static const String workoutIdField = 'workout_id';

  /// Workout Id
  String get workoutId => getField<String>(workoutIdField)!;
  set workoutId(String value) => setField<String>(workoutIdField, value);

  /// Esercizio Id field name
  static const String esercizioIdField = 'esercizio_id';

  /// Esercizio Id
  String? get esercizioId => getField<String>(esercizioIdField);
  set esercizioId(String? value) => setField<String>(esercizioIdField, value);

  /// Serie field name
  static const String serieField = 'serie';

  /// Serie
  int get serie => getField<int>(serieField)!;
  set serie(int value) => setField<int>(serieField, value);

  /// Ripetizioni field name
  static const String ripetizioniField = 'ripetizioni';

  /// Ripetizioni
  String get ripetizioni => getField<String>(ripetizioniField)!;
  set ripetizioni(String value) => setField<String>(ripetizioniField, value);

  /// Carico field name
  static const String caricoField = 'carico';

  /// Carico
  double? get carico => getField<double>(caricoField);
  set carico(double? value) => setField<double>(caricoField, value);

  /// Recupero field name
  static const String recuperoField = 'recupero';

  /// Recupero
  double? get recupero => getField<double>(recuperoField);
  set recupero(double? value) => setField<double>(recuperoField, value);

  /// Note field name
  static const String noteField = 'note';

  /// Note
  String? get note => getField<String>(noteField);
  set note(String? value) => setField<String>(noteField, value);

  /// Make a copy of the current [ExercisesRow]
  /// overriding the provided fields
  ExercisesRow copyWith({
    String? workoutId,
    int? serie,
    String? ripetizioni,
    String? esercizioAllId,
    String? esercizioId,
    double? carico,
    double? recupero,
    String? note,
  }) =>
      ExercisesRow.fromJson({
        'workout_id': supaSerialize(workoutId) ?? data['workout_id'],
        'serie': supaSerialize(serie) ?? data['serie'],
        'ripetizioni': supaSerialize(ripetizioni) ?? data['ripetizioni'],
        'esercizio_all_id':
            supaSerialize(esercizioAllId) ?? data['esercizio_all_id'],
        'esercizio_id': supaSerialize(esercizioId) ?? data['esercizio_id'],
        'carico': supaSerialize(carico) ?? data['carico'],
        'recupero': supaSerialize(recupero) ?? data['recupero'],
        'note': supaSerialize(note) ?? data['note'],
      });
}

/// Date: 2025-06-24 13:16:53.338124
