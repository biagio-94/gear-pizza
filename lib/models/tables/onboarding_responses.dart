//
//  Generated file. Do not edit.
//  Generated by supabase_codegen (1.4.0)
//
// ignore_for_file: require_trailing_commas, constant_identifier_names

import 'package:supabase_codegen/supabase_codegen.dart';
// Import enums if needed
// ignore: unused_import, always_use_package_imports
import '../database.dart';

/// Onboarding Responses Table
class OnboardingResponsesTable extends SupabaseTable<OnboardingResponsesRow> {
  /// Table Name
  @override
  String get tableName => 'onboarding_responses';

  /// Create a [OnboardingResponsesRow] from the [data] provided
  @override
  OnboardingResponsesRow createRow(Map<String, dynamic> data) =>
      OnboardingResponsesRow.fromJson(data);
}

/// Onboarding Responses Row
class OnboardingResponsesRow extends SupabaseDataRow {
  /// Onboarding Responses Row
  OnboardingResponsesRow({
    required String userId,
    required int questionId,
    required String answer,
    required String onboardingId,
    int? id,
    DateTime? createdAt,
  }) : super({
          'user_id': supaSerialize(userId),
          'question_id': supaSerialize(questionId),
          'answer': supaSerialize(answer),
          'onboarding_id': supaSerialize(onboardingId),
          if (id != null) 'id': supaSerialize(id),
          if (createdAt != null) 'created_at': supaSerialize(createdAt),
        });

  /// Onboarding Responses Row
  const OnboardingResponsesRow._(super.data);

  /// Create Onboarding Responses Row from a [data] map
  factory OnboardingResponsesRow.fromJson(Map<String, dynamic> data) =>
      OnboardingResponsesRow._(data.cleaned);

  /// Get the Json representation of the row
  Map<String, dynamic> toJson() => data;

  /// Get the [SupabaseTable] for this row
  @override
  SupabaseTable get table => OnboardingResponsesTable();

  /// Id field name
  static const String idField = 'id';

  /// Id
  int? get id => getField<int?>(idField);
  set id(int? value) => setField<int?>(idField, value);

  /// User Id field name
  static const String userIdField = 'user_id';

  /// User Id
  String get userId => getField<String>(userIdField)!;
  set userId(String value) => setField<String>(userIdField, value);

  /// Question Id field name
  static const String questionIdField = 'question_id';

  /// Question Id
  int get questionId => getField<int>(questionIdField)!;
  set questionId(int value) => setField<int>(questionIdField, value);

  /// Answer field name
  static const String answerField = 'answer';

  /// Answer
  String get answer => getField<String>(answerField)!;
  set answer(String value) => setField<String>(answerField, value);

  /// Created At field name
  static const String createdAtField = 'created_at';

  /// Created At
  DateTime get createdAt =>
      getField<DateTime>(createdAtField, defaultValue: DateTime.now())!;
  set createdAt(DateTime value) => setField<DateTime>(createdAtField, value);

  /// Onboarding Id field name
  static const String onboardingIdField = 'onboarding_id';

  /// Onboarding Id
  String get onboardingId => getField<String>(onboardingIdField)!;
  set onboardingId(String value) => setField<String>(onboardingIdField, value);

  /// Make a copy of the current [OnboardingResponsesRow]
  /// overriding the provided fields
  OnboardingResponsesRow copyWith({
    String? userId,
    int? questionId,
    String? answer,
    String? onboardingId,
    int? id,
    DateTime? createdAt,
  }) =>
      OnboardingResponsesRow.fromJson({
        'user_id': supaSerialize(userId) ?? data['user_id'],
        'question_id': supaSerialize(questionId) ?? data['question_id'],
        'answer': supaSerialize(answer) ?? data['answer'],
        'onboarding_id': supaSerialize(onboardingId) ?? data['onboarding_id'],
        'id': supaSerialize(id) ?? data['id'],
        'created_at': supaSerialize(createdAt) ?? data['created_at'],
      });
}

/// Date: 2025-06-24 13:16:53.349459
